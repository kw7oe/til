<%= form_for @conn, Routes.page_path(@conn, :index), [method: :get], fn f -> %>
  <div class="row">
    <%= label f, :filter_by_tag, class: "col-sm-2 col-form-label" %>
    <div class="col-sm-8">
      <div id="tags-container">
        <input id="tagsinput" type="text" list="tags">
      </div>
      <datalist id="tags">
        <%= for tag <- @tags do %>
          <option><%= tag %></option>
        <% end %>
      </datalist>
      <%= hidden_input f, :tags, id: "tagsvalue" %>
    </div>
    <div class="col-sm-2">
      <%= submit "Submit", class: "btn btn-outline-primary" %>
    </div>
  </div>
<% end %>

<script>
  var tags = []
  var tagsValue = document.getElementById("tagsvalue")
  var tagsInput = document.getElementById("tagsinput")
  var tagsContainer = document.getElementById("tags-container")

  function renderTag(tag, index) {
    return "<span class='badge badge-primary mr-1' data-value='" + tag + "'>" + tag
      + "<button type='button' class='close tagclose'>&times;</button>"
      + "</span>"
  }

  function removeTag(event) {
    var parent = event.target.parentElement
    var value = parent.getAttribute("data-value")
    var valueIndex = tags.indexOf(value)

    tags.splice(valueIndex, 1)
    tagsValue.value = tags.join(",")

    parent.remove()
  }

  function addTag(tag, event) {
    tag = tag.trim()

    if (tag === "") {
      event.target.value = ""
      return
    }

    tagsInput.insertAdjacentHTML("beforebegin", renderTag(tag, tags.length))
    tags.push(tag)
    tagsValue.value = tags.join(",")

    event.target.value = ""

    var tagClose = document.getElementsByClassName("tagclose")
    for (var i = 0; i < tagClose.length; i++) {
     tagClose[i].addEventListener("click", removeTag)
    }
  }

  tagsContainer.addEventListener("click", function(event) {
    tagsInput.focus()
  })

  tagsInput.addEventListener("keyup", function(event) {
    var tag
    switch (event.key) {
      case ",":
        tag = event.target.value.split(",")[0]
        addTag(tag, event)
        break
      case "Enter":
        tag = event.target.value
        addTag(tag, event)
        break
      default:
        break
    }

  })
</script>
